version: '3.8'

services:
  traefik:
    image: traefik:v2.10
    command:
      - "--entrypoints.web.address=:80"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--api.dashboard=true"
    ports:
      - "80:80"
      - "8080:8080"  # Optional: akses dashboard di http://<host>:8080
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    restart: always

  n8n:
    build: ./n8n-custom
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=n8npassword
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER=admin
      - N8N_BASIC_AUTH_PASSWORD=adminpassword
      - N8N_HOST=n8n.myautomationapp.com   # Ganti dengan domain milikmu
      - N8N_PROTOCOL=http
      - NODE_ENV=production
      - NODE_TLS_REJECT_UNAUTHORIZED=0
      # - WEBHOOK_URL=http://myautomationapp.duckdns.org/  # Ganti dengan domain milikmu
      - N8N_CUSTOM_EXTENSIONS=/home/node/.n8n
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_RUNNERS_ENABLED=true
    volumes:
      - n8n_data:/home/node/.n8n
    depends_on:
      - postgres
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`167.71.196.5`)"
      - "traefik.http.routers.n8n.entrypoints=web"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=n8n
      - POSTGRES_PASSWORD=n8npassword
      - POSTGRES_DB=n8n
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always

volumes:
  n8n_data:
  postgres_data:
